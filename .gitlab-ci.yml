stages:
  - test
  - sonarqube
  - deploy


UnitTest:
  image: python:3.6
  stage: test
  before_script:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
    - pip install -r requirements.txt
    - python manage.py makemigrations
    - python manage.py migrate
    - apt-get update -qq && apt-get install -y -qq unzip
    - apt-get install -y google-chrome-stable
    - apt-get install -y xvfb
    - wget https://chromedriver.storage.googleapis.com/2.32/chromedriver_linux64.zip
    - unzip chromedriver_linux64.zip
    - python manage.py collectstatic --no-input
    - python manage.py runserver 8000 &
  when: on_success
  script:
    - coverage report -m

sonarqube:
  
  stage: sonarqube
  before_script: 
    - python3 -V
    - pip3 install -r requirements.txt
  script:
    
    - coverage run --omit='manage.py,*/venv/*,**/python3*/**,authentication/cas_wrapper.py,/usr/**' manage.py test --settings=${ENVIRON}
    - coverage report -m
    - coverage xml -i
    - sonar-scanner
      -Dsonar.host.url=https://pmpl.cs.ui.ac.id/sonarqube
      -Dsonar.projectKey=$SONARQUBE_PROJECT_KEY
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME

deploy:
  type: deploy
  stage: deploy
  image: ruby:latest
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
    - heroku run --app $HEROKU_APP_NAME python manage.py migrate
  only:
    - master


